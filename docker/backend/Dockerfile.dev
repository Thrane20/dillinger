FROM node:18-alpine

# Install build dependencies and pnpm
RUN apk add --no-cache python3 make g++ curl
RUN npm install -g pnpm

# Create app directory
WORKDIR /app

# Copy workspace configuration files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./

# Copy package.json files for workspace dependencies
COPY packages/shared/package.json ./packages/shared/
COPY packages/backend/package.json ./packages/backend/

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy shared package source
COPY packages/shared/src ./packages/shared/src/
COPY packages/shared/tsconfig.json ./packages/shared/

# Copy backend source
COPY packages/backend/src ./packages/backend/src/
COPY packages/backend/tsconfig.json ./packages/backend/

# Build shared package first
WORKDIR /app/packages/shared
RUN pnpm run build

# Switch to backend directory
WORKDIR /app/packages/backend

# Create data directory
RUN mkdir -p /data

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S dillinger -u 1001

# Change ownership of directories
RUN chown -R dillinger:nodejs /app
RUN chown -R dillinger:nodejs /data

# Switch to non-root user
USER dillinger

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/api/health || exit 1

# Start development server
CMD ["pnpm", "run", "dev"]