version: '3.8'

services:
  dillinger-runner:
    build:
      context: .
      dockerfile: ./docker/runner/Dockerfile
      target: development
    image: thrane20/dillinger-runner:dev
    container_name: dillinger-runner-dev
    ports:
      - "3002:3002"      # API port
      - "8080:8080"      # Streaming port (WebRTC/WebSocket)
    volumes:
      # Application code for development
      - ./apps/dillinger-runner/src:/app/src:ro
      - ./packages/runner-types/src:/app/packages/runner-types/src:ro
      - ./packages/validation/src:/app/packages/validation/src:ro
      
      # Docker socket for container management
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Shared game library (read-only from runner perspective)
      - game-library:/opt/games:ro
      
      # Runtime data for session management  
      - runner-sessions:/tmp/sessions
      
      # X11 forwarding for display
      - /tmp/.X11-unix:/tmp/.X11-unix:ro
      
      # PulseAudio socket (if using host audio)
      - /run/user/${UID:-1000}/pulse:/run/user/1000/pulse:ro
    environment:
      - NODE_ENV=development
      - API_PORT=3002
      - STREAM_PORT=8080
      - GAME_LIBRARY_PATH=/opt/games
      - SESSION_DATA_PATH=/tmp/sessions
      - DISPLAY=${DISPLAY:-:0}
      - PULSE_SERVER=unix:/run/user/1000/pulse/native
      - API_KEY=${RUNNER_API_KEY:-dev-secret-key}
      - CORE_API_URL=${CORE_API_URL:-http://host.docker.internal:3001}
      
      # Container runtime configuration
      - DOCKER_HOST=unix:///var/run/docker.sock
      - NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
      - NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:-all}
    devices:
      # GPU access for hardware acceleration
      - /dev/dri:/dev/dri
    network_mode: bridge
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    depends_on:
      - runner-types-build
      - validation-build

  # Build service for runner-types package
  runner-types-build:
    build:
      context: .
      dockerfile: ./docker/packages/Dockerfile.build
      args:
        PACKAGE_NAME: runner-types
    container_name: dillinger-runner-types-build
    volumes:
      - ./packages/runner-types/src:/app/packages/runner-types/src:ro
      - runner-types-dist:/app/packages/runner-types/dist
    command: ["pnpm", "--filter", "@dillinger/runner-types", "run", "build"]

  # Build service for validation package
  validation-build:
    build:
      context: .
      dockerfile: ./docker/packages/Dockerfile.build
      args:
        PACKAGE_NAME: validation
    container_name: dillinger-validation-build
    volumes:
      - ./packages/validation/src:/app/packages/validation/src:ro
      - ./packages/runner-types/src:/app/packages/runner-types/src:ro
      - validation-dist:/app/packages/validation/dist
      - runner-types-dist:/app/packages/runner-types/dist:ro
    command: ["pnpm", "--filter", "@dillinger/validation", "run", "build"]
    depends_on:
      - runner-types-build

volumes:
  # Shared game library (persistent across restarts)
  game-library:
    driver: local
    driver_opts:
      type: none
      device: ${PWD}/data/games
      o: bind
      
  # Runner session data (ephemeral)
  runner-sessions:
    driver: local
    
  # Built package distributions
  runner-types-dist:
    driver: local
  validation-dist:
    driver: local

networks:
  default:
    name: dillinger-network
    external: false